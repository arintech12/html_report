name: run-code-coverage
on:
  push:
    branches: ["main"]
  workflow_dispatch:
permissions:
  contents: write
jobs:
  run-code-coverage:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
      
      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: install python packages
        run: |
          python -m pip install --upgrade pip
          pip install coverage
          pip install urllib3
      
      - name: run coverage
        run: |
          coverage run -m test
          coverage report --format=markdown > coverage.md
          coverage html --omit='.venv/*'
      
      - name: add coverage to summary
        run: |
          echo "## 📊 Coverage Report - Run #${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          cat coverage.md >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📁 HTML Coverage Reports (Last 5 Runs):" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Run # | Status | Download Link |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|---------------|" >> $GITHUB_STEP_SUMMARY
          echo "| **#${{ github.run_number }}** | ✅ **Current** | [coverage-report-run-${{ github.run_number }}](#artifacts) |" >> $GITHUB_STEP_SUMMARY
          
          # Add previous runs (they may or may not exist)
          if [ ${{ github.run_number }} -gt 1 ]; then
            echo "| #${{ env.PREV_RUN_1 }} | ⏳ Previous | [coverage-report-run-${{ env.PREV_RUN_1 }}](../../actions/runs/$((${{ github.run_number }} - 1))) |" >> $GITHUB_STEP_SUMMARY
          fi
          if [ ${{ github.run_number }} -gt 2 ]; then
            echo "| #${{ env.PREV_RUN_2 }} | ⏳ Previous | [coverage-report-run-${{ env.PREV_RUN_2 }}](../../actions/runs/$((${{ github.run_number }} - 2))) |" >> $GITHUB_STEP_SUMMARY
          fi
          if [ ${{ github.run_number }} -gt 3 ]; then
            echo "| #${{ env.PREV_RUN_3 }} | ⏳ Previous | [coverage-report-run-${{ env.PREV_RUN_3 }}](../../actions/runs/$((${{ github.run_number }} - 3))) |" >> $GITHUB_STEP_SUMMARY
          fi
          if [ ${{ github.run_number }} -gt 4 ]; then
            echo "| #${{ env.PREV_RUN_4 }} | ⏳ Previous | [coverage-report-run-${{ env.PREV_RUN_4 }}](../../actions/runs/$((${{ github.run_number }} - 4))) |" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "💡 **How to access:** Click on any run number above → Scroll to Artifacts section → Download the coverage report" >> $GITHUB_STEP_SUMMARY
      
      - name: create timestamped report
        run: |
          # Create a timestamped directory structure
          mkdir -p reports/run-${{ github.run_number }}
          cp -r htmlcov/* reports/run-${{ github.run_number }}/
          
          # Create an index file listing all reports
          echo "# Coverage Reports Archive" > reports/README.md
          echo "" >> reports/README.md
          echo "## Run #${{ github.run_number }} - $(date)" >> reports/README.md
          echo "- [View Report](run-${{ github.run_number }}/index.html)" >> reports/README.md
      
      - name: checkout existing reports
        uses: actions/checkout@v4
        with:
          ref: coverage-reports
          path: existing-reports
        continue-on-error: true
      
      - name: merge with existing reports
        run: |
          # Create coverage-reports directory
          mkdir -p coverage-reports
          
          # Copy existing reports if they exist
          if [ -d "existing-reports" ]; then
            cp -r existing-reports/* coverage-reports/ 2>/dev/null || true
          fi
          
          # Add new report
          mkdir -p coverage-reports/run-${{ github.run_number }}
          cp -r htmlcov/* coverage-reports/run-${{ github.run_number }}/
          
          # Keep only last 5 reports
          cd coverage-reports
          ls -d run-* | sort -V | head -n -5 | xargs -r rm -rf
          
          # Update index
          echo "# Coverage Reports Archive" > index.html
          echo "<h1>Coverage Reports Archive</h1>" >> index.html
          echo "<ul>" >> index.html
          for dir in $(ls -d run-* | sort -Vr); do
            run_num=$(echo $dir | sed 's/run-//')
            echo "<li><a href=\"$dir/index.html\">Run #$run_num Coverage Report</a></li>" >> index.html
          done
          echo "</ul>" >> index.html
      
      - name: upload merged reports
        uses: actions/upload-artifact@v4
        with: 
          name: coverage-reports-archive
          path: coverage-reports/
          retention-days: 90
      
      - name: deploy to coverage-reports branch
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: coverage-reports
          publish_branch: coverage-reports
          force_orphan: true
